name: CI Pipeline

on:
  push:
    branches:
      - main
    paths:
      - 'api/**'

  pull_request:
    branches:
      - main
    paths:
      - 'api/**'
  workflow_dispatch:

jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Create Build Directory
        run: mkdir -p /Users/dhanasekarsubramaniam/actions-runner/_work

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r api/requirements.txt

  lint:
    runs-on: self-hosted
    needs: build  # Ensure linting runs after the build job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Lint with flake8
        run: |
          pip install flake8  # Ensure flake8 is installed
          # Run flake8 with desired configuration
          flake8 .
        continue-on-error: true  # Fail the pipeline if linting fails

  test:
    runs-on: self-hosted
    needs: build  # Ensure tests run after the build job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Run Tests
        run: |
          pip install -r api/requirements.txt  # Install dependencies if not already installed
          pytest

  docker:
    runs-on: self-hosted
    needs: [build, lint, test]  # Ensure Docker job runs after build, lint, and test
    if: github.ref == 'refs/heads/main'  # Only push on main
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Set in repository secrets
          password: ${{ secrets.DOCKER_PASSWORD }}  # Set in repository secrets

      - name: Determine Version Tag
        id: version
        run: echo "VERSION=${GITHUB_REF##*/}" >> $GITHUB_ENV  # This sets the version to the Git tag

      - name: Build and Push API Docker Image
        uses: docker/build-push-action@v3
        with:
          context: ./api
          file: ./api/Dockerfile  # Path to your Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/fastapi_app:${{ env.VERSION }}

      - name: Build and Push Nginx Docker Image
        uses: docker/build-push-action@v3
        with:
          context: ./nginx  # Nginx build context
          file: ./nginx/Dockerfile  # Path to custom Nginx Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/nginx_app:${{ env.VERSION }}

      - name: Build and Push Alembic Migration Docker Image
        uses: docker/build-push-action@v3
        with:
          context: ./api  # Nginx build context
          file: ./api/Dockerfile.migrations  # Path to alembic custom migrations Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/alembic_migrations:${{ env.VERSION }}