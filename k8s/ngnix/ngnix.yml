apiVersion: v1
kind: Namespace
metadata:
  name: student-api
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: student-api
data:
  nginx.conf: |
    events { }

    http {
        upstream api_servers {
            # Add backup option and configure health checks
            server app-service:8000 max_fails=1 fail_timeout=10s;  # FastAPI container 1
            server app-service:8000 max_fails=1 fail_timeout=10s;  # FastAPI container 2
        }

        server {
            listen 80;

            location / {
                proxy_pass http://api_servers;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;

                # Configure failover and retries
                proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
                proxy_next_upstream_tries 3;
            }
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: student-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-config-volume
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
      volumes:
      - name: nginx-config-volume
        configMap:
          name: nginx-config
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: student-api
spec:
  type: NodePort
  ports:
  - port: 80
    targetPort: 80
    nodePort: 30080  # You can choose a port in the 30000-32767 range
  selector:
    app: nginx
